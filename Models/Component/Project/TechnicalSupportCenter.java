package Component.Project;

import java.awt.Dimension;
import java.awt.Point;

import Component.Project.CustomerCaseGenerator;
import Component.Project.SupportCenterRouter;
//import Component.BasicProcessor.transd;
import GenCol.entity;
import view.modeling.ViewableAtomic;
import view.modeling.ViewableComponent;
import view.modeling.ViewableDigraph;

public class TechnicalSupportCenter extends ViewableDigraph {
	
	public TechnicalSupportCenter(){
	    super("TechnicalSupportCenter");

	    ViewableAtomic customerCaseGenerator = new CustomerCaseGenerator("CustomerCaseGenerator",10);
	    ViewableAtomic supportCenterRouter = new SupportCenterRouter("SupportCenterRouter",5);
	    ViewableAtomic technialSupportEngineer  = new TechnicalSupportEngineer("TechnicalSupportEngineer", 10);
	    ViewableAtomic escalationEngineer  = new EscalationEngineer("EscalationEngineer", 10);
	    ViewableAtomic premiumSupportEngineer  = new PremiumSupportEngineer("PremiumSupportEngineer", 10);
	    ViewableAtomic transducer = new Transducer("TransducerPerformanceAnalyzer", 500);
	    
//	    ViewableAtomic t = new transd("transducer",370);

	     add(customerCaseGenerator);
	     add(supportCenterRouter);
	     add(technialSupportEngineer);
	     add(escalationEngineer);
	     add(premiumSupportEngineer);
	     add(transducer);

	    addInport("in");
	    addInport("start");
	    addInport("stop");
	    addOutport("out");
	    addOutport("result");
	    addOutport("TA");
	    addOutport("Thru");
	    addOutport("n_TSE_received");
	    addOutport("n_EE_received");
	    addOutport("n_PSE_received");
	    addOutport("n_TSE_resolved");
	    addOutport("n_EE_resolved");
	    addOutport("n_PSE_resolved");
	    addOutport("Avg_TSE_Rsln_time");
		addOutport("Avg_EE_Rsln_time");
		addOutport("Avg_PSE_Rsln_time");
		addOutport("Avg_TSE_Escalation_time");
		addOutport("Avg_EE_Escalation_time");
		addOutport("n_AWS");
		addOutport("n_Amazon");
	    
	    

	     addTestInput("start",new entity());
	     addTestInput("stop",new entity(), 5.0);

	     addCoupling(this,"in",customerCaseGenerator,"in");

	     addCoupling(this,"start",customerCaseGenerator,"start");
	     addCoupling(this,"stop",customerCaseGenerator,"stop");

	     addCoupling(customerCaseGenerator,"out",supportCenterRouter,"in");

	     addCoupling(supportCenterRouter,"outTSE",transducer,"ariv");
	     addCoupling(supportCenterRouter,"outEE",transducer,"ariv");
	     addCoupling(supportCenterRouter,"outPSE",transducer,"ariv");
	     addCoupling(supportCenterRouter,"outTSE",technialSupportEngineer,"inLevelI");
	     addCoupling(supportCenterRouter,"outPSE",premiumSupportEngineer,"inLevelIII");
	     addCoupling(supportCenterRouter,"outEE",escalationEngineer,"inLevelII");
	     addCoupling(technialSupportEngineer,"escalateLevelI", escalationEngineer, "inLevelII");
	     addCoupling(technialSupportEngineer,"resolvedLevelI", transducer, "solved");
	     addCoupling(escalationEngineer, "escalateLevelIII", premiumSupportEngineer, "inLevelIII");
	     addCoupling(escalationEngineer,"resolvedLevelII", technialSupportEngineer,"inLevelI");
	     addCoupling(premiumSupportEngineer, "resolvedLevelIII", escalationEngineer,"inLevelII");
	     addCoupling(transducer,"out",customerCaseGenerator,"stop");


//	     addCoupling(,"out",this,"out");
	     addCoupling(transducer,"out",this,"result");
	     addCoupling(transducer,"n_TSE_resolved",this,"n_TSE_resolved");
	     addCoupling(transducer,"n_EE_resolved",this,"n_EE_resolved");
	     addCoupling(transducer,"n_PSE_resolved",this,"n_PSE_resolved");
	     addCoupling(transducer,"n_TSE_received",this,"n_TSE_received");
	     addCoupling(transducer,"n_EE_received",this,"n_EE_received");
	     addCoupling(transducer,"n_PSE_received",this,"n_PSE_received");
	     addCoupling(transducer,"Avg_TSE_Escalation_time",this,"Avg_TSE_Escalation_time");
	     addCoupling(transducer,"Avg_EE_Escalation_time",this,"Avg_EE_Escalation_time");
	     addCoupling(transducer,"n_AWS",this,"n_AWS");
	     addCoupling(transducer,"n_Amazon",this,"n_Amazon");
	     
	     addCoupling(transducer,"TA",this,"TA");
	     addCoupling(transducer,"Thru",this,"Thru");
	     addCoupling(transducer,"Avg_TSE_Rsln_time",this,"Avg_TSE_Rsln_time");
	     addCoupling(transducer,"Avg_EE_Rsln_time",this,"Avg_EE_Rsln_time");
	     addCoupling(transducer,"Avg_PSE_Rsln_time",this,"Avg_PSE_Rsln_time");

	 //    initialize();
	    // showState();
	/*
	    preferredSize = new Dimension(484, 145);
	    g.setPreferredLocation(new Point(13, 18));
	    p.setPreferredLocation(new Point(195, 18));
	    t.setPreferredLocation(new Point(193, 80));
	    */
	}


	    
	    
    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    @Override
    public void layoutForSimView()
    {
        preferredSize = new Dimension(1585, 896);
        ((ViewableComponent)withName("SupportCenterRouter")).setPreferredLocation(new Point(539, 55));
        ((ViewableComponent)withName("TechnicalSupportEngineer")).setPreferredLocation(new Point(248, 238));
        ((ViewableComponent)withName("EscalationEngineer")).setPreferredLocation(new Point(647, 234));
        ((ViewableComponent)withName("TransducerPerformanceAnalyzer")).setPreferredLocation(new Point(430, 603));
        ((ViewableComponent)withName("CustomerCaseGenerator")).setPreferredLocation(new Point(18, 87));
        ((ViewableComponent)withName("PremiumSupportEngineer")).setPreferredLocation(new Point(972, 235));
    }
	}
